name: test and deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

env:
  SERVERLESS_PACKAGE_PATH: mtg-bot

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -t src/vendored
        pip install -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 --count --exit-zero --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  package:
    name: package
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: ["16.x"]
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -t src/vendored
    - name: serverless package
      uses: serverless/github-action@v3.1
      with:
        args: package --package ${{ env.SERVERLESS_PACKAGE_PATH }}
      env:
        TELEGRAM_TOKEN: ${{ github.ref == github.event.repository.default_branch && secrets.TELEGRAM_TOKEN || 'XXXXXXXXXXXX' }}
    - name: Archive serverless package as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: serverless
        path: ${{ env.SERVERLESS_PACKAGE_PATH }}

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
       name: serverless
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: serverless deploy
      uses: serverless/github-action@v3.1
      with:
        args: deploy --conceal --package ${{ env.SERVERLESS_PACKAGE_PATH }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
